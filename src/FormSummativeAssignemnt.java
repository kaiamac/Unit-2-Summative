/*
 * Kaia Mac
 * Points game
 * November 20th, 2018
 */

/**
 *
 * @author kamac8665
 */
public class FormSummativeAssignemnt extends javax.swing.JFrame {

    /**
     * Creates new form FormSummativeAssignemnt
     */
    public FormSummativeAssignemnt() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        TitleLabel = new javax.swing.JLabel();
        ChoiceLabel = new javax.swing.JLabel();
        userInput = new javax.swing.JTextField();
        ComputerChoiceLabel = new javax.swing.JLabel();
        computerChoiceOutput = new javax.swing.JLabel();
        PointsLabel = new javax.swing.JLabel();
        pointsOutput = new javax.swing.JLabel();
        whoWinsLabel = new javax.swing.JLabel();
        InfoBackgroundPanel = new javax.swing.JPanel();
        info1 = new javax.swing.JLabel();
        info2 = new javax.swing.JLabel();
        info3 = new javax.swing.JLabel();
        info4 = new javax.swing.JLabel();
        info5 = new javax.swing.JLabel();
        info6 = new javax.swing.JLabel();
        info7 = new javax.swing.JLabel();
        info8 = new javax.swing.JLabel();
        enterButton = new javax.swing.JButton();
        invalidNumberOutput = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backgroundPanel.setBackground(new java.awt.Color(204, 255, 204));

        TitleLabel.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        TitleLabel.setText("Points Game");

        ChoiceLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ChoiceLabel.setText("Enter a number between 1-10:");

        userInput.setText("0");

        ComputerChoiceLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComputerChoiceLabel.setText("Computers number:");

        computerChoiceOutput.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        computerChoiceOutput.setText("---");

        PointsLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PointsLabel.setText("Points:");

        pointsOutput.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pointsOutput.setText("50");

        whoWinsLabel.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N

        InfoBackgroundPanel.setBackground(new java.awt.Color(255, 204, 204));

        info1.setText("Choose a number between 1 to 10.");

        info2.setText("If your number is larger than the ");

        info3.setText("Computers number, you get 2");

        info4.setText("Points. If it is less than the ");

        info5.setText("Computers, you lose 2 points. If ");

        info6.setText("it is equal to, then you get 5.");

        info7.setText("The game is done when you reach to ");

        info8.setText("25 points, or 75 points.");

        javax.swing.GroupLayout InfoBackgroundPanelLayout = new javax.swing.GroupLayout(InfoBackgroundPanel);
        InfoBackgroundPanel.setLayout(InfoBackgroundPanelLayout);
        InfoBackgroundPanelLayout.setHorizontalGroup(
            InfoBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoBackgroundPanelLayout.createSequentialGroup()
                .addGroup(InfoBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(info3)
                    .addComponent(info4)
                    .addComponent(info5)
                    .addComponent(info6)
                    .addComponent(info7)
                    .addComponent(info2)
                    .addComponent(info1)
                    .addComponent(info8))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        InfoBackgroundPanelLayout.setVerticalGroup(
            InfoBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InfoBackgroundPanelLayout.createSequentialGroup()
                .addComponent(info1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(info2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(info3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(info4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(info5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(info6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(info7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(info8))
        );

        enterButton.setText("Enter");
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        invalidNumberOutput.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addComponent(InfoBackgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ChoiceLabel)
                            .addComponent(PointsLabel)
                            .addComponent(ComputerChoiceLabel)
                            .addComponent(invalidNumberOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pointsOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(computerChoiceOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enterButton))
                        .addGap(13, 13, 13))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addComponent(whoWinsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(TitleLabel))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addComponent(TitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ChoiceLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(invalidNumberOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(computerChoiceOutput)
                            .addComponent(ComputerChoiceLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PointsLabel)
                            .addComponent(pointsOutput))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(whoWinsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(InfoBackgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(jButton1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This Method adds 5 points if user input is equal to computer random number
     * @param points
     * @return 
     */
    public static int ifEqualTo (int points)
    {
       //adding points if user choice is equal to computer choice
        points = points + 5;
        
        return points;
    
    }        
    
    /**
     * This Method adds 2 points if userInput is larger than computer random number
     * @param points
     * @return 
     */
    public static int ifLargerThan (int points)
    {
        //adding points if user choice is larger than computer choice
        points = points + 2;
        
        return points;
    
    }
    
    /**
     * This Method subtracts 2 points if userInput is less than computer random number
     * @param points
     * @return 
     */
    public static int ifSmallerThan (int points)
    {
        //adding points if user choice is smaller than computer choice
        points = points - 2;
        
        return points;
    
    }
    
    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
        
        //calling variables
        
        int points = 50;
        int userChoice;
        int computerChoice;
        
        //computers random choice
        
        computerChoice = (int)Math.round(Math.random()*9+1);
        
        //getting userInputs choice of number
        
        userChoice = Integer.parseInt(userInput.getText());
        
        
        while(true){
        
            if (userChoice == computerChoice){
                
                pointsOutput.setText(ifEqualTo(points)+"");
            
            }
        
            if (userChoice > computerChoice){
                
                pointsOutput.setText(ifLargerThan(points)+"");
            
            }
        
            if (userChoice < computerChoice){
            
                pointsOutput.setText(ifSmallerThan(points)+"");
            
            }
        
                //setting text if computerChoice == to a number
                if (computerChoice == 1){
                
                    computerChoiceOutput.setText("1");  
                
                }
                
                if (computerChoice == 2){
                
                    computerChoiceOutput.setText("2");  
                
                }
        
                if (computerChoice == 3){
        
                    computerChoiceOutput.setText("3");  
       
                }
        
                if (computerChoice == 4){
        
                    computerChoiceOutput.setText("4");  
        
                }
        
                if (computerChoice == 5){
          
                    computerChoiceOutput.setText("5");  
        
                }
        
                if (computerChoice == 6){
        
                    computerChoiceOutput.setText("6");  
        
                }
        
                if (computerChoice == 7){
        
                    computerChoiceOutput.setText("7");  
        
                }
        
                if (computerChoice == 8){
        
                    computerChoiceOutput.setText("8");  
        
                }
        
                if (computerChoice == 9){
        
                    computerChoiceOutput.setText("9");  
        
                }
        
                if (computerChoice == 10){
        
                    computerChoiceOutput.setText("10");  
        
                }
        
                    //invalid numbers of userchoice
                    if (userChoice > 10){
                    
                        invalidNumberOutput.setText("Invalid Number");
                    
                    }
        
                    if (userChoice < 0){
        
                        invalidNumberOutput.setText("Invalid Number");
        
                    }
        
                        //Who wins
                        if (points > 75){
            
                            whoWinsLabel.setText("You Win!");
            
                            break;
        
                        }
        
                        if(points < 25){
            
                            whoWinsLabel.setText("You Lose!");
            
                            break;
        
                        }
        }
    }//GEN-LAST:event_enterButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormSummativeAssignemnt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormSummativeAssignemnt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormSummativeAssignemnt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormSummativeAssignemnt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormSummativeAssignemnt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ChoiceLabel;
    private javax.swing.JLabel ComputerChoiceLabel;
    private javax.swing.JPanel InfoBackgroundPanel;
    private javax.swing.JLabel PointsLabel;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JLabel computerChoiceOutput;
    private javax.swing.JButton enterButton;
    private javax.swing.JLabel info1;
    private javax.swing.JLabel info2;
    private javax.swing.JLabel info3;
    private javax.swing.JLabel info4;
    private javax.swing.JLabel info5;
    private javax.swing.JLabel info6;
    private javax.swing.JLabel info7;
    private javax.swing.JLabel info8;
    private javax.swing.JLabel invalidNumberOutput;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel pointsOutput;
    private javax.swing.JTextField userInput;
    private javax.swing.JLabel whoWinsLabel;
    // End of variables declaration//GEN-END:variables
}
